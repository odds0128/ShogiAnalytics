src
|-index.html
|-index.js   ... 基点．VueおよびVue-Routerの初期化やルーティングの記述などを行う．設定に属するもののみを行い，ロジックは記述しない．
|-App.vue    ... vue-routerのrouter-viewが書かれたテンプレートとアプリケーション内全体で使用するCSSを記述する．
|-components ... ボタンやフラッシュメッセージなどのコンポーネントを配置する．単体で副作用がなく，単方向のアプローチのみを許可する．詳細は下．
|  ∟globals ... 例えば全てのページで利用されるヘッダーコンポーネントなど複数のページで利用されるページのパーツを配置する．
|-pages      ... vue-routerのルーティングに対応するページのファイルを記述する．実際のページのディレクトリ構造に合わせる．
|-plugins
|-router
|-assets     ... 図などを配置する．
|-utils      ... 複数のルーティングで使用したい機能を記述．
∟stores     ... 複数のコンポーネントおよびルーティング内で共有するデータを保存する．

components ... 
ここに配置するコンポーネントは、単体では副作用がなく、また、単方向のアプローチ(受け手側)のみを許可します。
ここに記述するスタイルは全てScoped CSSで記述し、また、データやクラスの扱いは全てpropsによって実現します。
この原則を守ることにより、内部で自己完結する、再利用性の高い仕組みの構築が可能となります。

components/globals ...
propsではどうしても不十分なところも出てくるので、dataからのstoreの読み込みを許可します。
が、基本的にstoreへのデータ書き込みは禁止とします。
しかしながら、ヘッダーなどの場合、例えばアプリケーション内でのログアウト処理などが実装されることも考慮し、状態の変化のみは許可することとします。
例えばこれは、アクティブなページに関わる処理や、自身の状態に関わる処理などの、UI上での表示に関わる部分を中心とし、
アプリケーションロジックに関わるデータへのアクセスは禁止するということです。

参考: https://qiita.com/potato4d/items/55a60f21c26bf889afd5
